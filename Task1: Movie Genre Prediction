import pandas as pd 
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.preprocessing import LabelEncoder
from sklearn.svm import LinearSVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report

#IMPORTING THE DATA
train_data = pd.read_csv("train_data.txt",sep=':::',engine="python", names=['ID', 'TITLE', 'GENRE', 'DESCRIPTION'])
display(train_data.head())


test_data = pd.read_csv("test_data.txt",sep=':::',engine="python", names=['ID', 'TITLE', 'GENRE', 'DESCRIPTION'])
print(display(test_data.head()))

test_solution_data = pd.read_csv("test_data_solution.txt",sep=':::',engine="python" , names=['ID', 'TITLE', 'GENRE', 'DESCRIPTION'])
print(display(test_solution_data.head()))

#DATA VISUALIZATION
plt.figure(figsize=(20,8))
sns.countplot(y=train_data['GENRE'], order = train_data['GENRE'].value_counts().index)
plt.title('Number of Movies per Genre')
plt.xlabel('Number of Movies')
plt.ylabel('Genre')
plt.show()

#TRAINING DATA
train_data['DESCRIPTION'].fillna("", inplace=True)
test_data['DESCRIPTION'].fillna("", inplace=True)

t_v = TfidfVectorizer(stop_words='english', max_features=100000)
X_train = t_v.fit_transform(train_data['DESCRIPTION'])
X_test = t_v.transform(test_data['DESCRIPTION'])

label_encoder = LabelEncoder()
y_train = label_encoder.fit_transform(train_data['GENRE'])
y_test = label_encoder.transform(test_solution_data['GENRE'])

X_train_sub, X_val, y_train_sub, y_val = train_test_split(X_train, y_train, test_size=0.2, random_state=32)

clf = LinearSVC()
clf.fit(X_train_sub, y_train_sub)

y_val_pred = clf.predict(X_val)
print("Validation Accuracy:", accuracy_score(y_val, y_val_pred))

y_pred = clf.predict(X_test)
print("Test Accuracy:", accuracy_score(y_test, y_pred))

def predict_movie(description):
    t_v1 = t_v.transform([description])
    pred_label = clf.predict(t_v1)
    return label_encoder.inverse_transform(pred_label)[0]

sample_descr_for_movie = "A movie where criminal murders someone"
print("Genre: ",predict_movie(sample_descr_for_movie))

sample_descr_for_movie1 = "A movie where boy slips on a banana"
print("Genre: ",predict_movie(sample_descr_for_movie1))

sample_descr_for_movie2 = "A movie where a boy has an accident"
print("Genre: ",predict_movie(sample_descr_for_movie2))

sample_descr_for_movie3 = "A movie where there is a haunted house"
print("Genre: ",predict_movie(sample_descr_for_movie3))
